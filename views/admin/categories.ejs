<%- include('./includes/head') %>
<%- include('./includes/navbar_g') %>

<style>

    .dashboard {
        padding: 20px;
        background-color: <%= settings.backgroundColor || '#ccc9c9' %>;
        min-height: 100vh;
        margin-left: 250px;
    }

    h1 {
        font-size: 2rem;
        color: #333;
        margin-bottom: 20px;
    }

    h2 {
        font-size: 1.5rem;
        color: #555;
        margin-bottom: 15px;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 15px;
    }

    th, td {
        text-align: left;
        padding: 10px;
        border: 1px solid #ddd;
    }

    th {
        background-color: <%= settings.primaryColor || '#ec7d7a' %>;
        color: white;
    }

    .actions button {
        padding: 5px 10px;
        margin-right: 5px;
        border-radius: 5px;
        transition: background-color 0.3s ease;
        border: none;
        cursor: pointer;
    }

    .actions button.add {
        background-color: #4caf50;
        color: white;
    }

    .actions button.add:hover {
        background-color: #45a049;
    }

    .actions button.edit {
        background-color: <%= settings.secondaryColor || '#e74c3c' %>;
        color: white;
    }

    .actions button.edit:hover {
        background-color: <%= settings.primaryColor || '#ec7d7a' %>;
    }

    .actions button.delete {
        background-color: <%= settings.primaryColor || '#ec7d7a' %>;
        color: white;
    }

    .actions button.delete:hover {
        background-color: <%= settings.secondaryColor || '#e74c3c' %>;
    }

    .form-container {
        margin-bottom: 30px;
    }

    input, button {
        padding: 10px;
        font-size: 1rem;
        border-radius: 5px;
        border: 1px solid #ccc;
        margin-right: 10px;
    }

    button {
        background-color: #4caf50;
        color: white;
        border: none;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    button:hover {
        background-color: #45a049;
    }

    .modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
        display: none;
    }

    .modal-content {
        background: white;
        padding: 20px;
        border-radius: 8px;
        width: 400px;
        max-width: 90%;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        position: relative;
    }

    .modal-content h2 {
        margin-top: 0;
        font-size: 1.5rem;
    }

    .modal-content .close {
        position: absolute;
        top: 10px;
        right: 10px;
        font-size: 1.5rem;
        cursor: pointer;
        color: #333;
    }
</style>

<div class="dashboard">
    <h1>Gestion des Catégories</h1>

    <!-- Formulaire d'ajout de catégorie -->
    <div class="form-container">
        <h2>Ajouter une Catégorie</h2>
        <form id="add-category-form">
            <input type="text" name="name" placeholder="Nom de la catégorie" required>
            <button type="submit" class="add">Ajouter</button>
        </form>
    </div>

    <!-- Liste des catégories -->
    <div class="category-list">
        <h2>Catégories existantes</h2>
        <table>
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Nom</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="category-list">
                <% if (categories && categories.length > 0) { %>
                    <% categories.forEach(category => { %>
                    <tr>
                        <td><%= category.id %></td>
                        <td><%= category.name %></td>
                        <td class="actions">
                            <button class="edit" onclick="editCategory(<%= category.id %>)">Modifier</button>
                            <button class="delete" onclick="deleteCategory(<%= category.id %>)">Supprimer</button>
                        </td>
                    </tr>
                    <% }) %>
                <% } else { %>
                    <tr>
                        <td colspan="3">Aucune catégorie disponible</td>
                    </tr>
                <% } %>
            </tbody>
        </table>
    </div>
</div>

<!-- Modale pour modification -->
<div class="modal" id="edit-modal">
    <div class="modal-content">
        <span class="close" onclick="closeModal('edit-modal')">&times;</span>
        <h2>Modifier une Catégorie</h2>
        <form id="edit-category-form">
            <input type="hidden" name="id" id="edit-id">
            <input type="text" name="name" id="edit-name" placeholder="Nom de la catégorie" required>
            <button class="edit" type="submit">Modifier</button>
        </form>
    </div>
</div>

<script>
    async function loadCategories() {
        const response = await fetch('/api/categories');
        const categories = await response.json();

        const categoryList = document.getElementById('category-list');
        categoryList.innerHTML = '';

        if (!categories || categories.length === 0) {
            categoryList.innerHTML = `
                <tr>
                    <td colspan="3">Aucune catégorie disponible</td>
                </tr>
            `;
            return;
        }

        categories.forEach(category => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${category.id}</td>
                <td>${category.name}</td>
                <td class="actions">
                    <button class="edit" onclick="editCategory(${category.id})">Modifier</button>
                    <button class="delete" onclick="deleteCategory(${category.id})">Supprimer</button>
                </td>
            `;
            categoryList.appendChild(row);
        });
    }

    async function editCategory(id) {
        const response = await fetch('/api/categories');
        const categories = await response.json();
        const category = categories.find(c => c.id === id);

        if (!category) return alert('Catégorie introuvable.');

        document.getElementById('edit-id').value = category.id;
        document.getElementById('edit-name').value = category.name;
        document.getElementById('edit-modal').style.display = 'flex';
    }

    async function deleteCategory(id) {
        if (!confirm('Êtes-vous sûr de vouloir supprimer cette catégorie ?')) return;

        await fetch(`/api/categories/${id}`, { method: 'DELETE' });
        loadCategories();
    }

    document.getElementById('add-category-form').addEventListener('submit', async (e) => {
        e.preventDefault();

        const formData = new FormData(e.target);
        const data = Object.fromEntries(formData.entries());

        await fetch('/api/categories', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data),
        });

        e.target.reset();
        loadCategories();
    });

    document.getElementById('edit-category-form').addEventListener('submit', async (e) => {
        e.preventDefault();

        const formData = new FormData(e.target);
        const data = Object.fromEntries(formData.entries());

        await fetch(`/api/categories/${data.id}`, {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data),
        });

        closeModal('edit-modal');
        loadCategories();
    });

    function closeModal(modalId) {
        document.getElementById(modalId).style.display = 'none';
    }

    loadCategories();
</script>


<%- include('./includes/footer2') %>